# Getting column number for relocating
col_num <- which(names(Data1) == column_name)
# Creating new columns
Data1 <- mutate(Data1, `z_score` = NA) %>%
relocate(`z_score`, .after = col_num)
Data1 <- mutate(Data1, `z_Score_Total` = NA) %>%
relocate(`z_Score_Total`, .after = col_num+1)
Data1 <- mutate(Data1, `z_Score_Average` = NA) %>%
relocate(`z_Score_Average`, .after = col_num+2)
View(Data1)
# Calculating mean if the column we want exists
if(column_name %in% colnames(Data1)){
x <- get(column_name, Data1)
}else {
names <- c(names,files[f])
next
}
# Removing NA's
x_filt <- na.omit(x)
# Calculating mean and standard deviation
mean <- mean(x_filt)
std <- sd(x_filt)
# Calculating
for(i in 1:length(x)){
if(!is.na(x[i])){
Data1$z_score[i] <- (x[i] - mean) / std
}
}
# Getting rid of NA's in z_score
Data2 <- Data1 %>%
filter(abs(z_score) < 3)
View(Data1)
View(Data2)
shell("cls")
# Clearing the environment of previous variables
rm(list=ls())
################################################################################
# Use these two variables to determine the path to your files and the column that you want to calculate
# Setting the working directory
path <- "C:/Users/hughm/Dropbox/Cochlear_IIR_Project/Analysis/Scoring/Scoring_in_Progress/CI/Word Rec Quiet"
# Name of the column we want to calculate z-score for
column_name <- "Calculated Reaction Time"
setwd(path)
# Getting a list of all of the files
files = list.files(full.names = T)
# Getting rid of the ./
files <- gsub(x = files, pattern = "./", replacement = "")
# Getting the files that we need
files <- files[grepl(".xlsx", files)]
files <- files[!grepl("Offset", files)]
files <- files[!grepl("~", files)]
files <- files[!grepl("Combined", files)]
# Creating a storage dataframe
combine_df <- data.frame(row.names = NULL)
names <- c("")
f = 1
# Creating a track to see where to put the averaged scores
average_z_score <- data.frame(matrix(ncol = 2,nrow = length(files)))
colnames(average_z_score) <- c("ID","Average")
files
# Reading excel
Data1 <- read_excel(files[f])
# Getting column number for relocating
col_num <- which(names(Data1) == column_name)
# Creating new columns
Data1 <- mutate(Data1, `z_score` = NA) %>%
relocate(`z_score`, .after = col_num)
Data1 <- mutate(Data1, `z_Score_Total` = NA) %>%
relocate(`z_Score_Total`, .after = col_num+1)
Data1 <- mutate(Data1, `z_Score_Average` = NA) %>%
relocate(`z_Score_Average`, .after = col_num+2)
# Calculating mean if the column we want exists
if(column_name %in% colnames(Data1)){
x <- get(column_name, Data1)
}else {
names <- c(names,files[f])
next
}
# Removing NA's
x_filt <- na.omit(x)
# Calculating mean and standard deviation
mean <- mean(x_filt)
std <- sd(x_filt)
# Calculating
for(i in 1:length(x)){
if(!is.na(x[i])){
Data1$z_score[i] <- (x[i] - mean) / std
}
}
# Getting rid of NA's in z_score
Data2 <- Data1 %>%
filter(abs(z_score) < 3)
# Adding to the combined data frame
if(f == 1){
# If the combined data frame is empty, we want to make it the original file
combine_df <- Data2
start <- 1
end <- start + length(Data2)
} else{
combine_df <- rbind.fill(combine_df,Data2)
start <- end + 1
end <- start + length(Data2)
}
# Adding ID for the average scores data frame
average_z_score$ID <- Data2$`Participant Public ID`[start]
# Creating a track to see where to put the averaged scores
average_z_score <- data.frame(matrix(ncol = 2,nrow = length(files)))
colnames(average_z_score) <- c("ID","Average")
# Adding ID for the average scores data frame
average_z_score$ID[f] <- Data2$`Participant Public ID`[1]
View(combine_df)
f = 2
# Reading excel
Data1 <- read_excel(files[f])
# Getting column number for relocating
col_num <- which(names(Data1) == column_name)
# Creating new columns
Data1 <- mutate(Data1, `z_score` = NA) %>%
relocate(`z_score`, .after = col_num)
Data1 <- mutate(Data1, `z_Score_Total` = NA) %>%
relocate(`z_Score_Total`, .after = col_num+1)
Data1 <- mutate(Data1, `z_Score_Average` = NA) %>%
relocate(`z_Score_Average`, .after = col_num+2)
# Calculating mean if the column we want exists
if(column_name %in% colnames(Data1)){
x <- get(column_name, Data1)
}else {
names <- c(names,files[f])
next
}
# Removing NA's
x_filt <- na.omit(x)
# Calculating mean and standard deviation
mean <- mean(x_filt)
std <- sd(x_filt)
# Calculating
for(i in 1:length(x)){
if(!is.na(x[i])){
Data1$z_score[i] <- (x[i] - mean) / std
}
}
# Getting rid of NA's in z_score
Data2 <- Data1 %>%
filter(abs(z_score) < 3)
# Adding to the combined data frame
if(f == 1){
# If the combined data frame is empty, we want to make it the original file
combine_df <- Data2
start <- 1
end <- start + length(Data2)
} else{
combine_df <- rbind.fill(combine_df,Data2)
start <- end + 1
end <- start + length(Data2)
}
# Adding ID for the average scores data frame
average_z_score$ID[f] <- Data2$`Participant Public ID`[1]
# Calculating and filtering z_Score_Total
# Assigning the values to x
x1 <- get(column_name, combine_df)
# Removing NA's
x1_filt <- na.omit(x1)
# Calculating mean and standard deviation
mean <- mean(x1_filt)
std <- sd(x1_filt)
# Calculating z_score
for(i in 1:nrow(combine_df)){
if(!is.na(x1[i])){
combine_df$z_Score_Total[i] <- (x1[i] - mean) / std
}
}
# for(a in 1:length(average_z_score$ID)){
for(a in 1:2){
filtered <- combine_df %>%
filter(`Participant Public ID` = average_z_score$ID[a])
average_z_score$Average[a] <- mean(filtered$z_Score_Total)
}
# for(a in 1:length(average_z_score$ID)){
a = 1
filtered <- combine_df %>%
filter(`Participant Public ID` = average_z_score$ID[a])
filtered <- combine_df %>%
filter(`Participant Public ID` == average_z_score$ID[a])
average_z_score$Average[a] <- mean(filtered$z_Score_Total)
View(filtered)
# for(a in 1:length(average_z_score$ID)){
for(a in 1:2){
filtered <- combine_df %>%
filter(`Participant Public ID` == average_z_score$ID[a])
average_z_score$Average[a] <- mean(filtered$z_Score_Total)
}
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/R01R21 Scripts/Scripts/z-scores-calculation-across-participants.R", echo=TRUE)
View(average_z_score)
View(combine_df)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/R01R21 Scripts/Scripts/z-scores-calculation-across-participants.R", echo=TRUE)
View(filtered)
View(average_z_score)
shell("cls")
# Clearing the environment of previous variables
rm(list=ls())
################################################################################
# Use these two variables to determine the path to your files and the column that you want to calculate
# Setting the working directory
path <- "C:/Users/hughm/Dropbox/Cochlear_IIR_Project/Analysis/Scoring/Scoring_in_Progress/CI/Word Rec Quiet"
# Name of the column we want to calculate z-score for
column_name <- "Calculated Reaction Time"
setwd(path)
# Getting a list of all of the files
files = list.files(full.names = T)
# Getting rid of the ./
files <- gsub(x = files, pattern = "./", replacement = "")
# Getting the files that we need
files <- files[grepl(".xlsx", files)]
files <- files[!grepl("Offset", files)]
files <- files[!grepl("~", files)]
files <- files[!grepl("Combined", files)]
# Creating a storage dataframe
combine_df <- data.frame(row.names = NULL)
names <- c("")
f = 21
# Creating a track to see where to put the averaged scores
average_z_score <- data.frame(matrix(ncol = 2,nrow = length(files)))
colnames(average_z_score) <- c("ID","Average")
# Reading excel
Data1 <- read_excel(files[f])
View(Data1)
# Getting column number for relocating
col_num <- which(names(Data1) == column_name)
# Creating new columns
Data1 <- mutate(Data1, `z_score` = NA) %>%
relocate(`z_score`, .after = col_num)
Data1 <- mutate(Data1, `z_Score_Total` = NA) %>%
relocate(`z_Score_Total`, .after = col_num+1)
# Calculating mean if the column we want exists
if(column_name %in% colnames(Data1)){
x <- get(column_name, Data1)
}else {
names <- c(names,files[f])
next
}
View(average_z_score)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
library(ggplot2); library(tidyverse)
library(gapminder); library(readxl)
# gapminder %>%
#   filter(year == 2007, continent != "Oceania") %>%
#   ggplot(aes(x = gdpPercap,
#              y = lifeExp)) +
#   geom_point()
#
# # Getting rid of the empty space
# gapminder %>%
#   filter(year == 2007, continent != "Oceania", continent != "Africa") %>%
#   ggplot(aes(x = gdpPercap,
#              y = lifeExp,
#              color  = continent)) +
#   geom_point() +
#   facet_wrap(~ continent) +
#   scale_x_log10()
Data1 <- read_excel("C:/Users/hughm/Dropbox/Cochlear_IIR_Project/Analysis/Figures/Shiny Plots Accent Discrimination/1ID analyses.xlsx")
# Making the first data frame to hold the info from the first item
data1_filtered <- data.frame(
x_data = Data1$aprimeAT,
y_data = Data1$WordrecQuietScore
) %>%
na.omit()
data2_filtered <- data.frame(
x_data = Data1$aprimeAT,
y_data = Data1$WordrecQuietZScore
) %>%
na.omit()
data3_filtered <- data.frame(
x_data = Data1$aprimeAT,
y_data = Data1$Sentence_Rec_Quiet_Score
) %>%
na.omit()
# Combining the data frames
combined_data <- rbind(data1_filtered,data2_filtered,data3_filtered)
View(combined_data)
data1_filtered <- data.frame(
x_data = Data1$aprimeAT,
y_data = Data1$WordrecQuietScore,
metric = "Word Rec Quiet Score"
) %>%
na.omit()
data2_filtered <- data.frame(
x_data = Data1$aprimeAT,
y_data = Data1$WordrecQuietZScore,
metric = "Word Rec Quiet Reaction Time"
) %>%
na.omit()
data3_filtered <- data.frame(
x_data = Data1$aprimeAT,
y_data = Data1$Sentence_Rec_Quiet_Score,
metric = "Sentence Rec Quiet Score"
) %>%
na.omit()
# Combining the data frames
combined_data <- rbind(data1_filtered,data2_filtered,data3_filtered)
View(combined_data)
ggplot(data = combined_data,aes(x = y_data, y = x_data)) +
geom_point() +
facet_grid(~ metric, scales = "free_x")
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
ggplot(data = combined_data,aes(x = y_data, y = x_data, lty = type)) +
geom_point(aes(shape = type)) +
facet_grid(~ metric, scales = "free_x") +
geom_smooth(method = lm)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
ggplot(data = combined_data,aes(x = y_data, y = x_data, lty = type)) +
geom_point(aes(shape = type)) +
facet_grid(~ metric, scales = "free_x") +
geom_smooth(method = lm, se = F) +
labs(y = "Sensitivity (A')", x = "", shape = "Orthographic Condition", lty = "Orthographic Condition")
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
scale_x <- list(
Word_Rec_Quiet_Score = scale_x_continuous(limits = c(0,100)),
Sentence_Rec_Quiet_Score = scale_x_continuous(limits = c(0,100)),
Word_Rec_Quiet_Reaction_Time = scale_x_continuous(limits = c(-5,5))
)
View(scale_x)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
install.packages("facetscales")
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
fake_data1 <- data.frame(
x_data = c(0,100),
y_data = c(0,1),
type = "AT",
metric = "Word_Rec_Quiet_Score"
)
fake_data2 <- data.frame(
x_data = c(0,100),
y_data = c(0,1),
type = "AT",
metric = "Sentence_Rec_Quiet_Score"
)
fake_data1 <- data.frame(
x_data = c(-5,5),
y_data = c(0,1),
type = "AO",
metric = "Word_Rec_Quiet_Z_Score"
)
fake_data4 <- data.frame(
x_data = c(0,100),
y_data = c(0,1),
type = "AO",
metric = "Word_Rec_Quiet_Score"
)
fake_data5 <- data.frame(
x_data = c(0,100),
y_data = c(0,1),
type = "AO",
metric = "Sentence_Rec_Quiet_Score"
)
fake_data6 <- data.frame(
x_data = c(-5,5),
y_data = c(0,1),
type = "AO",
metric = "Word_Rec_Quiet_Z_Score"
)
combined_fake_data <- rbind(fake_data1,fake_data2,fake_data3,fake_data4,fake_data5,fake_data6)
fake_data3 <- data.frame(
x_data = c(-5,5),
y_data = c(0,1),
type = "AO",
metric = "Word_Rec_Quiet_Z_Score"
)
fake_data1 <- data.frame(
x_data = c(0,100),
y_data = c(0,1),
type = "AT",
metric = "Word_Rec_Quiet_Score"
)
fake_data2 <- data.frame(
x_data = c(0,100),
y_data = c(0,1),
type = "AT",
metric = "Sentence_Rec_Quiet_Score"
)
fake_data3 <- data.frame(
x_data = c(-5,5),
y_data = c(0,1),
type = "AO",
metric = "Word_Rec_Quiet_Z_Score"
)
fake_data4 <- data.frame(
x_data = c(0,100),
y_data = c(0,1),
type = "AO",
metric = "Word_Rec_Quiet_Score"
)
fake_data5 <- data.frame(
x_data = c(0,100),
y_data = c(0,1),
type = "AO",
metric = "Sentence_Rec_Quiet_Score"
)
fake_data6 <- data.frame(
x_data = c(-5,5),
y_data = c(0,1),
type = "AO",
metric = "Word_Rec_Quiet_Z_Score"
)
combined_fake_data <- rbind(fake_data1,fake_data2,fake_data3,fake_data4,fake_data5,fake_data6)
View(combined_fake_data)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# Gapminder
library(ggplot2); library(tidyverse); library(readxl)
# Reading in the scoring log
Data1 <- read_excel("C:/Users/hughm/Dropbox/Cochlear_IIR_Project/Analysis/Figures/Shiny Plots Accent Discrimination/FA Summary.xlsx")
# Clearing the console of previous junk
shell("cls")
# Clearing the environment of previous variables
rm(list=ls())
# Reading in the scoring log
Data1 <- read_excel("C:/Users/hughm/Dropbox/Cochlear_IIR_Project/Analysis/Figures/Shiny Plots Accent Discrimination/FA Summary.xlsx")
View(Data1)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
traceback()
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
traceback()
View(data1_filtered)
View(data2_filtered)
View(data3_filtered)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
View(data1_filtered)
View(data2_filtered)
View(data3_filtered)
View(data4_filtered)
View(data5_filtered)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
source("C:/Users/hughm/OneDrive - VUMC/General/R01+R21 Outcomes Studies/Analysis/Code/Data Visualization App/Shiny_Gui/Facet.R", echo=TRUE)
shiny::runApp()
View(data1_filtered)
View(combined_data)
